.. image:: _images/lasso_random_3e3_5e5_lambda_3e-1_noborder.png
	:width: 450 px
	:align: center

In the figure is a performance comparison between ForBES, the fast forward-backward
splitting method (also known as fast proximal gradient method) and ADMM
(alternating direction method of multipliers), applied to a Lasso problem with
3K observations and 500K features, for a total of 7.5M nonzero coefficients.

Distances
---------

+----------------------------+-----------------------------------------------------------------+--------------------------------------------+
| Name and parameters        | :math:`h(x)`                                                    | Default                                    |
+============================+=================================================================+============================================+
| ``distBall_l2(r, c, w)``   | :math:`w\|x-\Pi_{\mathcal{B}_r(c)}x\|`                          | ``r=1``, ``c=0``, ``w=1``                  |
+----------------------------+-----------------------------------------------------------------+--------------------------------------------+
| ``distBox(l, u, w)``       | :math:`\sum_i w_i(x_i-\min\{u,\max\{l,x_i\}\})`                 | ``l=-inf``, ``u=+inf``, ``w=1``            |
+----------------------------+-----------------------------------------------------------------+--------------------------------------------+
| ``distNeg(w, u)``          | :math:`\sum_i w_i(x_i-\min\{u_i,x_i\})`                         | ``w=1``, ``u=0``                           |
+----------------------------+-----------------------------------------------------------------+--------------------------------------------+
| ``distPos(w, l)``          | :math:`\sum_i w_i(x_i-\max\{l_i,x_i\})`                         | ``w=1``, ``l=0``                           |
+----------------------------+-----------------------------------------------------------------+--------------------------------------------+
| ``dist2Ball_l2(r, c, w)``  | :math:`\tfrac{w}{2}\|x-\Pi_{\mathcal{B}_r(c)}x\|^2`             | ``r=1``, ``c=0``, ``w=1``                  |
+----------------------------+-----------------------------------------------------------------+--------------------------------------------+
| ``dist2Box(l, u, w)``      | :math:`\tfrac{1}{2}\sum_i w_i(x_i-\min\{u_i,\max\{l_i,x\}\})^2` | ``l=-inf``, ``u=+inf``, ``w=1``            |
+----------------------------+-----------------------------------------------------------------+--------------------------------------------+
| ``dist2Neg(w, u)``         | :math:`\tfrac{1}{2}\sum_i w_i(x_i-\min\{u_i,x_i\})^2`           | ``w=1``, ``u=0``                           |
+----------------------------+-----------------------------------------------------------------+--------------------------------------------+
| ``dist2Pos(w, l)``         | :math:`\tfrac{1}{2}\sum_i w_i(x_i-\max\{l_i,x_i\})^2`           | ``w=1``, ``l=0``                           |
+----------------------------+-----------------------------------------------------------------+--------------------------------------------+

Indicator functions
-------------------

+----------------------------+-----------------------------------------------------------------+--------------------------------------------+
| Name and parameters        | :math:`h(x)`                                                    | Default                                    |
+============================+=================================================================+============================================+
| ``indBall_l2(r, c)``       | :math:`\mathrm{ind}_{\{x:\ \|x-c\|\leq r\}}(x)`                 | ``r=1``, ``c=0``                           |
+----------------------------+-----------------------------------------------------------------+--------------------------------------------+
| ``indBox(l, u)``           | :math:`\mathrm{ind}_{\{x:\ l\leq x\leq u\}}(x)`                 | ``l=-inf``, ``u=+inf``                     |
+----------------------------+-----------------------------------------------------------------+--------------------------------------------+
| ``indNeg(u)``              | :math:`\mathrm{ind}_{\{x:\ x\leq u\}}(x)`                       | ``u=0``                                    |
+----------------------------+-----------------------------------------------------------------+--------------------------------------------+
| ``indPos(l)``              | :math:`\mathrm{ind}_{\{x:\ x\geq l\}}(x)`                       | ``l=0``                                    |
+----------------------------+-----------------------------------------------------------------+--------------------------------------------+

Norms and regularization functions
----------------------------------

+----------------------------+--------------------------------------------------------------------------------------------+--------------------------------------------+
| Name and parameters        | :math:`h(x)`                                                                               | Default                                    |
+============================+============================================================================================+============================================+
| ``l1Norm(r)``              | :math:`r\|x\|_1`                                                                           | ``r=1``                                    |
+----------------------------+--------------------------------------------------------------------------------------------+--------------------------------------------+
| ``l2Norm(r)``              | :math:`r\|x\|_2`                                                                           | ``r=1``                                    |
+----------------------------+--------------------------------------------------------------------------------------------+--------------------------------------------+
| ``l2NormSum(m, r)``        | :math:`r \sum_{i=1}^k \|x_i\|_2,\ \mbox{where}\ x=(x_1,\ldots,x_k),\ x_i\in\mathbb{R}^m`   | ``m=1``, ``r=1``                           |
+----------------------------+--------------------------------------------------------------------------------------------+--------------------------------------------+
| ``nuclearNorm(m, n, r)``   | :math:`r \sum_i \sigma_i(X),\ \mbox{where}\ X=[x_1\cdots x_n],\ x_i\in\mathbb{R}^m`        | ``r=1``                                    |
+----------------------------+--------------------------------------------------------------------------------------------+--------------------------------------------+
| ``elasticNet(m, r)``       | :math:`m\|x\|_1 + \tfrac{r}{2}\|x\|_2^2`                                                   | ``m=1``, ``r=1``                           |
+----------------------------+--------------------------------------------------------------------------------------------+--------------------------------------------+

Other functions
---------------

+--------------------------------------+--------------------------------------------------------------------------------------------------+--------------------------------------------+
| Name and parameters                  | :math:`h(x)`                                                                                     | Default                                    |
+======================================+==================================================================================================+============================================+
| ``quadratic(Q, q)``                  | :math:`\tfrac{1}{2}\langle Qx, x \rangle + \langle q,x\rangle`                                   | ``Q=1``, ``q=0``                           |
+--------------------------------------+--------------------------------------------------------------------------------------------------+--------------------------------------------+
| ``quadraticOverAffine(A, b, Q, q)``  | :math:`\tfrac{1}{2}\langle Qx, x \rangle + \langle q,x\rangle + \mathrm{ind}_{\{x:\ Ax=b\}}(x)`  | ``Q=1``, ``q=0``                           |
+--------------------------------------+--------------------------------------------------------------------------------------------------+--------------------------------------------+
| ``quadLoss(w, p)``                   | :math:`\sum_i w_i(x_i-p_i)^2`                                                                    | ``w=1``, ``p=0``                           |
+--------------------------------------+--------------------------------------------------------------------------------------------------+--------------------------------------------+
| ``quadLossOverAffine(A, b, w, p)``   | :math:`\sum_i w_i(x_i-p_i)^2 + \mathrm{ind}_{\{x:\ Ax=b\}}(x)`                                   | ``w=1``, ``p=0``                           |
+--------------------------------------+--------------------------------------------------------------------------------------------------+--------------------------------------------+
| ``logLoss(m)``                       | :math:`m \sum_i \log(1+\exp\{-x_i\})`                                                            | ``m=1``                                    |
+--------------------------------------+--------------------------------------------------------------------------------------------------+--------------------------------------------+
| ``powabs(p, c)``                     | :math:`c|x|^p`                                                                                   | ``p=1``, ``c=1``                           |
+--------------------------------------+--------------------------------------------------------------------------------------------------+--------------------------------------------+

Linear mappings
---------------

Todo.